products in db
[options.upsert=false] «Boolean» if true, and no documents found, insert a new document
create or update


user methods +
add token +
check password +
check token +

calc


мало ошибок в "проблемах"! мне больше нравиться когда строгая типизация и бьют по рукам. аирбнб и все такое больше нравится!



// TODO:
//! має приймати з req дані - провести їх валідацію, якщо не валідні то видавити помилку по томі чи іншому полі
//! якщо всі поля пройшли валідацію - з формули вирахувати норму калорій
//! взяти з реквеста групу крові і в потрібній колекції взяти дані по цій групі - які категорії проуктів заборонені
//! у відповідь відправи норму калорій і список заборонених категорій продуків
//!

// ? requestBody
// ? {
// ?   height: Number,
// ?   currentWeight: Number,
// ?   age: Number,
// ?   desiredWeight: Number,
// ?   groupBlood: Number
// ? }

//* respond
//* 		200
//*		{
//*			normalCalories: Number,
//*			notAllowerCategories: Array // []
//*   }
//*   500 {
//*   	error: Server error,
//*	    message: error.message
//*    }
//*   400
//*
//*
//*
//*

const errorMessages = [];
 if(1 < height < 299) {

 } esle {
	 errorMessages.push('Ввведена не коректа цифра діапзон невірний')
 }


 if (errorMessages.length > 0) {
		res.status(400).json({
			status: "BAD",
			messages: errorMessages
		})
 } else {
	//! тут добавляжмо функію з формулою
	//! шукамо у колекції крові потрібний документ
	//! відправляємо результат

 }
